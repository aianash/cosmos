cosmos {

  actorSystem = "aianonymous"
  service.name="cosmos-service"
  serviceid = 1
  datacenterid = 1
  host=${?COSMOS_HOST}
  port=4849

  service {

    createtask {
      min-event-count = 1000
      task-interval = 900000
    }

    schedular {
      max-running-task = 5
    }

  }

}


akka {

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    deployment {

      /cosmos-service/cassie {
        router = round-robin-group
        routees.paths = ["/user/event-service"]

        cluster {
          enabled = on
          use-role = event-service
          allow-local-routees = off
        }

      }

      /cosmos-service/eventprocessor {
        router = round-robin-pool
        nr-of-instances = 5
      }

      /cosmos-service/modeltrainer {
        router = round-robin-pool
        nr-of-instances = 5
      }

    }

  }

  remote {
    log-remote-lifecycle-events = off

    netty.tcp {
      hostname = ${?COSMOS_HOST}
      port = ${?COSMOS_PORT}
    }

  }

  cluster {
    auto-down-unreachable-after = 10s
  }

}


microservice {

  log-info = on

  # Number of attempts to get a leader
  # and join cluster with seed nodes
  retry-attempts-for-leader-election = 4

  # Zookeeper config
  zookeeper {
    url = "zookeeper.aianash.com:2181"
    seed-path = "/cluster/seed"
  }

  host = ${?COSMOS_HOST}
  port = ${?COSMOS_PORT}

}